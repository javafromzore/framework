<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
		 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>course.linkflower.link</groupId>
	<artifactId>one-framework</artifactId>
	<version>1.1.0</version>
	<packaging>pom</packaging>
	<properties>
		<exchange2currency.version>1.0.0</exchange2currency.version>
		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<java.version>8</java.version>
		<spring-cloud-alibaba-dependencies.version>2021.1</spring-cloud-alibaba-dependencies.version>
		<spring-boot-dependencies.version>2.5.9</spring-boot-dependencies.version>
		<spring-cloud-dependencies.version>2020.0.4</spring-cloud-dependencies.version>
		<commons-collections4.version>4.4</commons-collections4.version>
		<jjwt.version>0.9.1</jjwt.version>
		<druid-starter>1.2.6</druid-starter>
		<jasypt.version>1.14</jasypt.version>
		<sharding-sphere.version>3.1.0</sharding-sphere.version>
		<security-oauth2.version>2.3.8.RELEASE</security-oauth2.version>
		<security-jwt.version>1.1.0.RELEASE</security-jwt.version>
		<redisson-starter.version>3.16.1</redisson-starter.version>
		<easyCaptcha.version>1.6.2</easyCaptcha.version>
		<hutool.version>5.7.20</hutool.version>
		<mybatis-plus-boot-starter.version>3.4.0</mybatis-plus-boot-starter.version>
		<aliyun-sdk-oss>3.8.1</aliyun-sdk-oss>
		<qiniu-java-sdk>7.2.28</qiniu-java-sdk>
		<easypoi.version>4.1.3</easypoi.version>
		<poi.version>4.1.1</poi.version>
		<spring-boot-admin.version>2.5.5</spring-boot-admin.version>
		<velocity.version>1.7</velocity.version>
		<commons-configuration2.version>2.7</commons-configuration2.version>
		<txlcn.version>5.0.2.RELEASE</txlcn.version>
		<fastdfs-client.version>1.27.2</fastdfs-client.version>
		<userAgent.version>1.21</userAgent.version>
		<transmittable.version>2.12.1</transmittable.version>
		<banner.version>1.0.2</banner.version>
		<commons-beanutils.version>1.9.4</commons-beanutils.version>
		<spring-social-security.version>1.1.6.RELEASE</spring-social-security.version>
		<commons-io.version>2.7</commons-io.version>
		<servlet-api.version>4.0.1</servlet-api.version>
		<spring-data-elasticsearch.version>4.2.3</spring-data-elasticsearch.version>
		<elasticsearch.version>7.13.4</elasticsearch.version>
		<knife4j.version>2.0.5</knife4j.version>
		<hibernate-validator.version>6.2.0.Final</hibernate-validator.version>
		<dubbo.version>2.7.8</dubbo.version>
		<curator.version>5.1.0</curator.version>
		<jackson-databind.version>2.12.4</jackson-databind.version>
		<commons-configuration.version>1.10</commons-configuration.version>
		<zuul.version>2.2.9.RELEASE</zuul.version>
		<aws-java-sdk-s3.version>1.12.40</aws-java-sdk-s3.version>
		<spring-cloud-starter-oauth2.version>2.2.5.RELEASE</spring-cloud-starter-oauth2.version>
		<docker-maven-plugin.version>1.2.2</docker-maven-plugin.version>
		<sonar.exclusions>fly-job/**/*, fly-register/**/*, fly-web/**/*</sonar.exclusions>
		<docker.baseImage>openjdk:8-jre-alpine</docker.baseImage>
		<docker.volumes>/tmp</docker.volumes>
		<docker.image.prefix>hub.e2cef.com:8080/microservices-platform</docker.image.prefix>
		<docker.java.security.egd>-Djava.security.egd=file:/dev/./urandom</docker.java.security.egd>
		<docker.java.opts>-Xms128m -Xmx128m</docker.java.opts>
		<mapstruct.version>1.5.3.Final</mapstruct.version>
		<protobuf.version>3.21.7</protobuf.version>
		<fastjson2.version>2.0.18</fastjson2.version>
		<lombok-mapstruct-binding.version>0.2.0</lombok-mapstruct-binding.version>
		<geoip2.version>2.9.0</geoip2.version>
		<Java-WebSocket.version>1.5.3</Java-WebSocket.version>
		<netty.version>4.1.73.Final</netty.version>
		<mysql.version>6.0.4</mysql.version>
		<binance-connector-java.version>1.10.0</binance-connector-java.version>
		<coinapi-connect-java.version>1.8</coinapi-connect-java.version>
		<kucoin-java-sdk.version>1.0.6</kucoin-java-sdk.version>
		<jakarta.websocket.version>2.0.0</jakarta.websocket.version>
		<dsl-json-java8.version>1.9.3</dsl-json-java8.version>
		<glassfish.tyrus.version>2.0.0</glassfish.tyrus.version>
		<converter-jackson.version>2.9.0</converter-jackson.version>
		<tomcat-dbcp.version>10.0.16</tomcat-dbcp.version>
		<pagehelper.version>1.4.5</pagehelper.version>
	</properties>

	<dependencies>

		<dependency>
			<groupId>com.alibaba.fastjson2</groupId>
			<artifactId>fastjson2</artifactId>
			<version>${fastjson2.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>3.12.0</version>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-collections4</artifactId>
			<version>${commons-collections4.version}</version>
		</dependency>
		<dependency>
			<groupId>commons-beanutils</groupId>
			<artifactId>commons-beanutils</artifactId>
			<version>${commons-beanutils.version}</version>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<version>1.18.22</version>
		</dependency>
		<dependency>
			<groupId>org.mapstruct</groupId>
			<artifactId>mapstruct</artifactId>
			<version>${mapstruct.version}</version>
		</dependency>
		<dependency>
			<groupId>org.mapstruct</groupId>
			<artifactId>mapstruct-processor</artifactId>
			<version>${mapstruct.version}</version>
		</dependency>
		<dependency>
			<groupId>org.json</groupId>
			<artifactId>json</artifactId>
			<version>20080701</version>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok-mapstruct-binding</artifactId>
			<version>${lombok-mapstruct-binding.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<version>2.5.9</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.13.2</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-bootstrap</artifactId>
			<version>3.0.4</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-loadbalancer</artifactId>
		</dependency>
	</dependencies>
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>com.github.pagehelper</groupId>
				<artifactId>pagehelper-spring-boot-starter</artifactId>
				<version>${pagehelper.version}</version>
			</dependency>

			<dependency>
				<groupId>com.google.protobuf</groupId>
				<artifactId>protobuf-java</artifactId>
				<version>${protobuf.version}</version>
			</dependency>
			<dependency>
				<groupId>io.netty</groupId>
				<artifactId>netty-all</artifactId>
				<version>${netty.version}</version>
			</dependency>
			<dependency>
				<groupId>mysql</groupId>
				<artifactId>mysql-connector-java</artifactId>
				<version>${mysql.version}</version>
			</dependency>
			<dependency>
				<groupId>org.java-websocket</groupId>
				<artifactId>Java-WebSocket</artifactId>
				<version>${Java-WebSocket.version}</version>
			</dependency>
			<!-- druid 官方 starter -->
			<dependency>
				<groupId>com.alibaba</groupId>
				<artifactId>druid-spring-boot-starter</artifactId>
				<version>${druid-starter}</version>
			</dependency>
			<!-- mybatis-plus start -->
			<dependency>
				<groupId>com.baomidou</groupId>
				<artifactId>mybatis-plus-boot-starter</artifactId>
				<version>${mybatis-plus-boot-starter.version}</version>
			</dependency>
			<dependency>
				<groupId>com.baomidou</groupId>
				<artifactId>mybatis-plus-extension</artifactId>
				<version>${mybatis-plus-boot-starter.version}</version>
			</dependency>
			<dependency>
				<groupId>com.baomidou</groupId>
				<artifactId>mybatis-plus</artifactId>
				<version>${mybatis-plus-boot-starter.version}</version>
			</dependency>
			<!-- 加入spring security spring security oauth2的处理 -->
			<dependency>
				<groupId>org.springframework.security.oauth</groupId>
				<artifactId>spring-security-oauth2</artifactId>
				<version>${security-oauth2.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.security</groupId>
				<artifactId>spring-security-jwt</artifactId>
				<version>${security-jwt.version}</version>
			</dependency>
			<!-- 在Redis基础上的一个Java实用工具包 -->
			<dependency>
				<groupId>org.redisson</groupId>
				<artifactId>redisson-spring-boot-starter</artifactId>
				<version>${redisson-starter.version}</version>
			</dependency>
			<!-- 验证码生成工具 -->
			<dependency>
				<groupId>com.github.whvcse</groupId>
				<artifactId>easy-captcha</artifactId>
				<version>${easyCaptcha.version}</version>
			</dependency>
			<!-- hutool java工具类库  -->
			<dependency>
				<groupId>cn.hutool</groupId>
				<artifactId>hutool-all</artifactId>
				<version>${hutool.version}</version>
			</dependency>

			<dependency>
				<groupId>org.apache.poi</groupId>
				<artifactId>poi</artifactId>
				<version>${poi.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.poi</groupId>
				<artifactId>poi-ooxml</artifactId>
				<version>${poi.version}</version>
			</dependency>
			<!--   easypoi   -->
			<dependency>
				<groupId>cn.afterturn</groupId>
				<artifactId>easypoi-base</artifactId>
				<version>${easypoi.version}</version>
			</dependency>
			<dependency>
				<groupId>de.codecentric</groupId>
				<artifactId>spring-boot-admin-starter-server</artifactId>
				<version>${spring-boot-admin.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.velocity</groupId>
				<artifactId>velocity</artifactId>
				<version>${velocity.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-configuration2</artifactId>
				<version>${commons-configuration2.version}</version>
			</dependency>
			<dependency>
				<groupId>com.codingapi.txlcn</groupId>
				<artifactId>txlcn-tm</artifactId>
				<version>${txlcn.version}</version>
			</dependency>
			<dependency>
				<groupId>com.codingapi.txlcn</groupId>
				<artifactId>txlcn-tc</artifactId>
				<version>${txlcn.version}</version>
			</dependency>
			<dependency>
				<groupId>com.codingapi.txlcn</groupId>
				<artifactId>txlcn-txmsg-netty</artifactId>
				<version>${txlcn.version}</version>
			</dependency>
			<dependency>
				<groupId>io.shardingsphere</groupId>
				<artifactId>sharding-jdbc-spring-boot-starter</artifactId>
				<version>${sharding-sphere.version}</version>
			</dependency>
			<dependency>
				<groupId>com.github.tobato</groupId>
				<artifactId>fastdfs-client</artifactId>
				<version>${fastdfs-client.version}</version>
			</dependency>
			<dependency>
				<groupId>eu.bitwalker</groupId>
				<artifactId>UserAgentUtils</artifactId>
				<version>${userAgent.version}</version>
			</dependency>
			<dependency>
				<groupId>com.alibaba</groupId>
				<artifactId>transmittable-thread-local</artifactId>
				<version>${transmittable.version}</version>
			</dependency>
			<dependency>
				<groupId>com.nepxion</groupId>
				<artifactId>banner</artifactId>
				<version>${banner.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.social</groupId>
				<artifactId>spring-social-security</artifactId>
				<version>${spring-social-security.version}</version>
			</dependency>
			<dependency>
				<groupId>commons-io</groupId>
				<artifactId>commons-io</artifactId>
				<version>${commons-io.version}</version>
			</dependency>
			<dependency>
				<groupId>javax.servlet</groupId>
				<artifactId>javax.servlet-api</artifactId>
				<version>${servlet-api.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.data</groupId>
				<artifactId>spring-data-elasticsearch</artifactId>
				<version>${spring-data-elasticsearch.version}</version>
			</dependency>
			<dependency>
				<groupId>org.elasticsearch.client</groupId>
				<artifactId>elasticsearch-rest-high-level-client</artifactId>
				<version>${elasticsearch.version}</version>
			</dependency>
			<dependency>
				<groupId>org.elasticsearch</groupId>
				<artifactId>elasticsearch-x-content</artifactId>
				<version>${elasticsearch.version}</version>
			</dependency>
			<dependency>
				<groupId>org.elasticsearch.client</groupId>
				<artifactId>elasticsearch-rest-client</artifactId>
				<version>${elasticsearch.version}</version>
			</dependency>
			<dependency>
				<groupId>org.elasticsearch</groupId>
				<artifactId>elasticsearch</artifactId>
				<version>${elasticsearch.version}</version>
			</dependency>
			<dependency>
				<groupId>com.github.xiaoymin</groupId>
				<artifactId>knife4j-spring-boot-starter</artifactId>
				<version>${knife4j.version}</version>
			</dependency>
			<dependency>
				<groupId>com.github.xiaoymin</groupId>
				<artifactId>knife4j-micro-spring-boot-starter</artifactId>
				<version>${knife4j.version}</version>
			</dependency>
			<dependency>
				<groupId>org.hibernate</groupId>
				<artifactId>hibernate-validator</artifactId>
				<version>${hibernate-validator.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.dubbo</groupId>
				<artifactId>dubbo</artifactId>
				<version>${dubbo.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.curator</groupId>
				<artifactId>curator-recipes</artifactId>
				<version>${curator.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.curator</groupId>
				<artifactId>curator-framework</artifactId>
				<version>${curator.version}</version>
			</dependency>
			<dependency>
				<groupId>com.fasterxml.jackson.core</groupId>
				<artifactId>jackson-databind</artifactId>
				<version>${jackson-databind.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-starter-oauth2</artifactId>
				<version>${spring-cloud-starter-oauth2.version}</version>
			</dependency>
			<dependency>
				<groupId>com.amazonaws</groupId>
				<artifactId>aws-java-sdk-s3</artifactId>
				<version>${aws-java-sdk-s3.version}</version>
			</dependency>

			<dependency>
				<groupId>commons-configuration</groupId>
				<artifactId>commons-configuration</artifactId>
				<version>${commons-configuration.version}</version>
			</dependency>
			<dependency>
				<groupId>com.maxmind.geoip2</groupId>
				<artifactId>geoip2</artifactId>
				<version>${geoip2.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-jdbc</artifactId>
				<version>2.5.9</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-dependencies</artifactId>
				<version>${spring-boot-dependencies.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>${spring-cloud-dependencies.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>com.alibaba.cloud</groupId>
				<artifactId>spring-cloud-alibaba-dependencies</artifactId>
				<version>${spring-cloud-alibaba-dependencies.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>
	<profiles>
		<!-- 生产环境 -->
		<profile>
			<id>release</id>
			<properties>
				<env>release</env>
			</properties>
		</profile>
		<!-- 开发环境 -->
		<profile>
			<id>dev</id>
			<properties>
				<env>dev</env>
			</properties>
			<!--     <activation>
                     <activeByDefault>true</activeByDefault>
                 </activation>-->
		</profile>
		<!-- 测试环境 -->
		<profile>
			<id>test</id>
			<properties>
				<env>test</env>
			</properties>
		</profile>
		<profile>
			<id>milk</id>
			<properties>
				<env>milk</env>
			</properties>
		</profile>
		<profile>
			<id>derrick</id>
			<properties>
				<env>derrick</env>
			</properties>
		</profile>
		<!-- 本地环境 -->
		<profile>
			<id>local</id>
			<properties>
				<env>local</env>
			</properties>
			<!--默认启用-->
			<!--<activation>
                <activeByDefault>true</activeByDefault>
            </activation>-->
		</profile>
		<profile>
			<id>kee</id>
			<properties>
				<env>kee</env>
			</properties>
		</profile>
		<profile>
			<id>tony</id>
			<properties>
				<env>tony</env>
			</properties>
			<!--默认启用-->
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
		</profile>
	</profiles>
	<build>
		<!-- 指定使用filter -->
		<resources>
			<resource>
				<directory>src/main/resources/${env}</directory>
				<filtering>true</filtering>
			</resource>
			<resource>
				<directory>src/main/resources/public</directory>
				<filtering>false</filtering>
			</resource>
		</resources>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-maven-plugin</artifactId>
					<version>${spring-boot-dependencies.version}</version>
				</plugin>
				<plugin>
					<groupId>com.spotify</groupId>
					<artifactId>docker-maven-plugin</artifactId>
					<version>${docker-maven-plugin.version}</version>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
	<modules>
		<module>business</module>
		<module>commons</module>
	</modules>

</project>
